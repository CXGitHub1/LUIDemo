{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"sel",
				"selectIndex"
			],
			[
				"re",
				"reachBottomFire"
			],
			[
				"mask",
				"maskHeight"
			],
			[
				"CanAdd",
				"CanAddAtStart"
			]
		]
	},
	"buffers":
	[
		{
			"file": "LComponent/LScrollPage.lua",
			"settings":
			{
				"buffer_size": 12227,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "LListDemo = LListDemo or BaseClass(BaseDemo)\n\nLListDemo.Config = {\n    --单列 水平\n    --多行\n    {row = 1, direction = LList.Direction.horizontal, dataLength = 5, sizeType = TestDefine.SizeType.fix},\n    {column = 3, direction = LList.Direction.horizontal, dataLength = 5, sizeType = TestDefine.SizeType.fix},\n    {column = 2, direction = LList.Direction.horizontal, dataLength = 5, sizeType = TestDefine.SizeType.increase},\n    {column = 2, row = 3, gapVertical = 5, gapHorizontal = 10, direction = LList.Direction.horizontal, dataLength = 11, sizeType = TestDefine.SizeType.fix},\n    {column = 2, row = 3, gapVertical = 5, gapHorizontal = 10,\n        paddingLeft = 20, paddingRight = -20, paddingTop = 10, paddingBottom = 40,\n        direction = LList.Direction.horizontal, dataLength = 14, sizeType = TestDefine.SizeType.specified1},\n    {column = 1, row = 4, gapVertical = 5, gapHorizontal = 10, \n        direction = LList.Direction.vertical, dataLength = 10, sizeType = TestDefine.SizeType.fix},\n    {column = 2, row = 5, gapVertical = 5, gapHorizontal = 5, \n        paddingLeft = 5, paddingRight = 5, paddingTop = 5, paddingBottom = 5,\n        direction = LList.Direction.vertical, dataLength = 15, sizeType = TestDefine.SizeType.fix},\n    {column = 1, row = 1, gapVertical = 5, gapHorizontal = 5, \n        paddingLeft = 5, paddingRight = 5, paddingTop = 5, paddingBottom = 5,\n        direction = LList.Direction.vertical, dataLength = 5, sizeType = TestDefine.SizeType.increase},\n}\n\nfunction LListDemo:__init(gameObject)\n    local transform = gameObject.transform\n    self.list = {}\n    for i = 1, #LListDemo.Config do\n        local config = LListDemo.Config[i]\n        local list = LList.New(transform:Find(\"Test\" .. i), LTestItem, config.row, config.column, config.direction)\n        table.insert(self.list, list)\n        list:SetGap(config.gapHorizontal, config.gapVertical)\n        list:SetPadding(config.paddingLeft, config.paddingRight, config.paddingTop, config.paddingBottom)\n    end\nend\n\nfunction LListDemo:SetData()\n    for i = 1, #self.list do\n        local config = LListDemo.Config[i]\n        local list = self.list[i]\n        local dataList = self:CreateDataList(config.dataLength)\n        list:SetData(dataList, {sizeType = config.sizeType})\n    end\nend\n",
			"file": "Demo/LListDemo.lua",
			"file_size": 2250,
			"file_write_time": 131775049165598023,
			"settings":
			{
				"buffer_size": 2271,
				"encoding": "UTF-8",
				"line_ending": "Unix",
				"name": "LListDemo"
			}
		},
		{
			"file": "LComponent/LList.lua",
			"settings":
			{
				"buffer_size": 8136,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "LScrollViewDemo = LScrollViewDemo or BaseClass(BaseDemo)\n\nLScrollViewDemo.Config = {\n    --动态大小，垂直滚动\n    {column = 2, dataLength = 20, sizeType = TestDefine.SizeType.specified1},\n    --动态大小，水平滚动，初始化开始下标\n    {row = 3, dataLength = 10000, startIndex = 1000, gapVertical = 10, gapHorizontal = 10, sizeType = TestDefine.SizeType.specified3},\n    --动态大小，垂直滚动，初始化开始下标,包括gap和padding\n    {column = 3, dataLength = 200, startIndex = 2, gapVertical = 10, gapHorizontal = 10,\n        paddingLeft = 10, paddingRight = 20, paddingTop = 40, paddingBottom = 50,\n        sizeType = TestDefine.SizeType.specified4},\n    --滚动到底部动态添加数据\n    {column = 2, gapVertical = 5, dataLength = 20, bottomData = 40, sizeType = TestDefine.SizeType.specified1},\n    --多次SetData效果\n    {column = 2, gapVertical = 5, dataLength = 20, sizeType = TestDefine.SizeType.specified1},\n    --多事件交互\n    {column = 2, gapVertical = 5, dataLength = 20, eventName = \"IconClickEvent\", sizeType = TestDefine.SizeType.fix},\n}\n\nfunction LScrollViewDemo:__init(transform)\n    self.list = {}\n    for i = 1, #LScrollViewDemo.Config do\n        local config = LScrollViewDemo.Config[i]\n        local listView = LScrollView.New(transform:Find(\"Test\" .. i), LDemoItem, config.row, config.column)\n        listView:SetGap(config.gapHorizontal, config.gapVertical)\n        listView:SetPadding(config.paddingLeft, config.paddingRight, config.paddingTop, config.paddingBottom)\n        listView.ItemSelectEvent:AddListener(function(index, item)\n            Debug.Log(\"ItemSelectEvent:\" .. index)\n        end)\n        if config.startIndex then\n            listView:SetStartIndex(config.startIndex)\n        end\n        if config.eventName then\n            listView:AddItemEvent(config.eventName)\n            listView[config.eventName]:AddListener(function(index)\n                Debug.Log(config.eventName .. \":\" .. index)\n            end)\n        end\n        if config.bottomData then\n            local once = true\n            listView.ReachBottomEvent:AddListener(function()\n                if once then\n                    once = false\n                    local dataList = self:CreateDataList(config.bottomData)\n                    listView:SetData(dataList, {sizeType = config.sizeType})\n                end\n            end)\n        end\n        if i == 5 then\n            local button = transform:Find(\"Button5\"):GetComponent(Button)\n            button.gameObject:SetActive(true)\n            button.onClick:AddListener(function()\n                local randomValue= math.random(0, 100)\n                local dataList = self:CreateDataList(randomValue)\n                listView:SetData(dataList, {sizeType = config.sizeType})\n            end)\n        end\n        table.insert(self.list, listView)\n    end\nend\n\nfunction LScrollViewDemo:SetData()\n    for i = 1, #self.list do\n        local config = LScrollViewDemo.Config[i]\n        local listView = self.list[i]\n        local dataList = self:CreateDataList(config.dataLength)\n        listView:SetData(dataList, {sizeType = config.sizeType})\n    end \nend",
			"file": "Demo/LScrollViewDemo.lua",
			"file_size": 3169,
			"file_write_time": 131775048882728023,
			"settings":
			{
				"buffer_size": 3036,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "Demo/BaseDemo.lua",
			"settings":
			{
				"buffer_size": 329,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Test/LListTest.lua",
			"settings":
			{
				"buffer_size": 2373,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/D/code/unity/LUIDemo/Lua",
		"/D/code/unity/LUIDemo/Lua/Base",
		"/D/code/unity/LUIDemo/Lua/Demo",
		"/D/code/unity/LUIDemo/Lua/LComponent",
		"/D/code/unity/LUIDemo/Lua/Test",
		"/D/code/unity/LUIDemo/Lua/Util"
	],
	"file_history":
	[
		"/D/code/unity/LUIDemo/Lua/Util/UtilsBase.lua",
		"/D/code/unity/LUIDemo/Lua/Test/LScrollPageTest.lua",
		"/D/code/unity/LUIDemo/Lua/Util/EventLib.lua",
		"/D/code/unity/LUIDemo/Lua/LComponent/LScrollView.lua",
		"/D/code/unity/LUIDemo/Lua/Demo/DemoManager.lua",
		"/D/code/unity/LUIDemo/Lua/Demo/LScrollViewDemo.lua",
		"/D/code/unity/LUIDemo/Lua/test.lua",
		"/D/code/unity/LUIDemo/Lua/Demo/LScrollViewDemo1.lua",
		"/D/code/unity/LUIDemo/Lua/Demo/LScrollViewDemoItem1.lua",
		"/D/code/unity/LUIDemo/Lua/Test/LScrollViewTest.lua",
		"/D/code/unity/LUIDemo/Lua/Base/BaseClass.lua",
		"/D/code/unity/LUIDemo/Lua/LComponent/LList.lua",
		"/D/code/unity/LUIDemo/Lua/Demo/MenuItem.lua",
		"/D/code/unity/LUIDemo/Lua/Test/LListTest.lua",
		"/D/code/unity/LUIDemo/Lua/Demo/LDemoItem.lua",
		"/D/code/unity/LUIDemo/Lua/LComponent/LItem.lua",
		"/D/code/unity/LUIDemo/Lua/LComponent/LScrollPage.lua",
		"/D/code/unity/LUIDemo/Lua/Test/TestDefine.lua",
		"/D/code/unity/LUIDemo/Lua/Util/Tween.lua",
		"/D/code/unity/LUIDemo/Lua/Mod/ExpandableListTestItem.lua",
		"/D/code/unity/LUIDemo/Lua/Mod/ExpandablePanel.lua",
		"/D/code/unity/LUIDemo/Lua/Mod/ListViewPanel.lua",
		"/D/code/unity/LUIDemo/Lua/Mod/ListViewTestItem.lua",
		"/D/code/unity/LUIDemo/Lua/Mod/LTestItem.lua",
		"/D/code/unity/LUIDemo/Lua/Mod/ScrollPagePanel.lua",
		"/D/code/unity/LUIDemo/Lua/Mod/ScrollPageTestItem.lua",
		"/D/code/unity/LUIDemo/Lua/Mod/ScrollViewPanel.lua",
		"/D/code/unity/LUIDemo/Lua/Mod/ScrollViewTestItem.lua",
		"/D/code/unity/LUIDemo/Lua/Util/UtilsUI.lua",
		"/D/code/unity/LUIDemo/Lua/Test/LTestItem.lua",
		"/D/code/unity/LUIDemo/Lua/UIComponent/ListItem.lua",
		"/D/code/unity/LUIDemo/Lua/UIComponent/NExpandableListItem.lua",
		"/D/code/unity/LUIDemo/Lua/UIComponent/NExpandableListView.lua",
		"/D/code/unity/LUIDemo/Lua/UIComponent/ScrollPage.lua",
		"/D/code/unity/LUIDemo/Lua/UIComponent/ScrollPageItem.lua",
		"/D/code/unity/LUIDemo/Lua/Util/UtilsTween.lua",
		"/D/code/unity/LUIDemo/Lua/Demo/BaseDemo.lua",
		"/D/code/unity/LUIDemo/Lua/Util/EventMgr.lua",
		"/D/code/unity/Lua/LComponent/LScrollPage.lua",
		"/D/code/unity/Lua/Util/EventMgr.lua",
		"/D/code/unity/Lua/LComponent/LScrollView.lua",
		"/D/code/unity/Lua/Test/LScrollPageTest.lua",
		"/D/code/unity/Lua/test.lua",
		"/D/code/unity/Lua/LComponent/LTreeNode.lua",
		"/D/code/unity/lua/LComponent/LTreeNode.lua",
		"/D/code/unity/Lua/LComponent/LTree.lua"
	],
	"find":
	{
		"height": 40.0
	},
	"find_in_files":
	{
		"height": 104.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"transform",
			"LListTest",
			"InitTurnButton",
			"_refreshTurnButton",
			"leftButton",
			"InitTurnButton",
			"DragEvent",
			"controller",
			"Cancel",
			"PullDown",
			"CustomDragButton",
			"CustomButton",
			"print",
			"Destroy",
			"Des",
			"Debug",
			"LListTest",
			"TweenDelete",
			"delete",
			"__delete",
			"TweenDelete",
			"Delete",
			"TweenIdListDelete",
			"ReleaseTween",
			"LogError",
			"FieldRelease",
			"TableRelease",
			"TweenRelease",
			"TweenDelete",
			"delete",
			"Delete",
			"DeleteMe",
			"UtilsTween",
			"DeleteTimer",
			"UtilsBase",
			"_assert",
			"_xpcall",
			"_pairs",
			"RemoveListener",
			"handler",
			"Remove",
			"handlers",
			"args1",
			"handlers",
			"oncehandlers",
			"EventName",
			"k",
			"handlerList",
			"handlers",
			"handlerList",
			"firedelay",
			"__innerFire",
			"EventMgr",
			"commonData",
			"_InitData",
			"ItemSelectEvent",
			"UtilsUi",
			"DemoScrollViewItem",
			"srollView",
			"listView",
			"eventName",
			"LDemoItem",
			"eventName",
			"_CalcSize",
			"_InitData",
			"_CalcSize",
			"_InitData",
			"LScrollViewDemo1",
			"_FireReachBottomEvent",
			"_IsOutOfView",
			"position",
			"itemPoolList",
			"itemPoolList\n",
			"itemPoolList",
			"_AboveMaskTop",
			"_ContentContainMask",
			"_InitData",
			"length",
			"_InitData",
			"_FireReachBottomEvent",
			"_EndOutMask",
			"_LessThanMaskLeft",
			"_LessThanMaskRight",
			"_AboveMaskBottom",
			"_IsColumnMax",
			"isFirst",
			"size",
			"offsetY",
			"item",
			"addStartIndex",
			"_AddAtEnd",
			"startItem",
			"_ContentContainMask",
			"_FireReachBottomEvent",
			"maskWidth",
			"OnValueChanged",
			"_CalcSize",
			"CalcSize",
			"GetEndIndex",
			"GetStartIndex",
			"GetColumn",
			"GetRow",
			"_IsColumnMax",
			"IsColumnMax",
			"_IsRowMax",
			"IsRowMax",
			"_EndOutMask",
			"EndOutMask",
			"_ContentEndInMask",
			"ContentEndInMask",
			"_ContentStartInMask",
			"ContentStartInMask",
			"RemoveEndOutMask",
			"ContentContainMask",
			"_IsVerticalScroll",
			"IsVerticalScroll",
			"_GreaterThanMaskRight",
			"GreaterThanMaskRight",
			"_AboveMaskTop",
			"AboveMaskTop",
			"_LessThanMaskLeft",
			"LessThanMaskLeft",
			"_BelowMaskBottom",
			"BelowMaskBottom",
			"LessThanMaskRight",
			"BelowMaskTop",
			"GreaterThanMaskLeft",
			"AboveMaskBottom"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"__release",
			"CancelTween",
			"CancelTweenIdList",
			"CancelTween",
			"pError",
			"ReleaseField",
			"ReleaseTable",
			"ReleaseTween",
			"TweenRelease"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "LComponent/LScrollPage.lua",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12227,
						"regions":
						{
						},
						"selection":
						[
							[
								410,
								410
							]
						],
						"settings":
						{
							"syntax": "Packages/Lua/Lua.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "Demo/LListDemo.lua",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2271,
						"regions":
						{
						},
						"selection":
						[
							[
								1919,
								1919
							]
						],
						"settings":
						{
							"auto_name": "LListDemo",
							"syntax": "Packages/Lua/Lua.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "LComponent/LList.lua",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8136,
						"regions":
						{
						},
						"selection":
						[
							[
								56,
								56
							]
						],
						"settings":
						{
							"syntax": "Packages/Lua/Lua.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 3,
					"file": "Demo/LScrollViewDemo.lua",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3036,
						"regions":
						{
						},
						"selection":
						[
							[
								2895,
								2895
							]
						],
						"settings":
						{
							"syntax": "Packages/Lua/Lua.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 432.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "Demo/BaseDemo.lua",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 329,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Lua/Lua.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "Test/LListTest.lua",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2373,
						"regions":
						{
						},
						"selection":
						[
							[
								1381,
								1381
							]
						],
						"settings":
						{
							"syntax": "Packages/Lua/Lua.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 27.0
	},
	"input":
	{
		"height": 39.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.464370546319,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "Lua.sublime-project",
	"replace":
	{
		"height": 50.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"basede",
				"Demo\\BaseDemo.lua"
			],
			[
				"utilsb",
				"Util\\UtilsBase.lua"
			],
			[
				"test",
				"test.lua"
			],
			[
				"evet",
				"Util\\EventLib.lua"
			],
			[
				"lscrollvi",
				"LComponent\\LScrollView.lua"
			],
			[
				"EventLib",
				"Util\\EventLib.lua"
			],
			[
				"llistte",
				"Test\\LListTest.lua"
			],
			[
				"twen",
				"Util\\Tween.lua"
			],
			[
				"utilsba",
				"Util\\UtilsBase.lua"
			],
			[
				"tween",
				"Util\\Tween.lua"
			],
			[
				"utilsui",
				"Util\\UtilsUI.lua"
			],
			[
				"lScrollvi",
				"LComponent\\LScrollView.lua"
			],
			[
				"lsc",
				"LComponent\\LScrollPage.lua"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 236.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
